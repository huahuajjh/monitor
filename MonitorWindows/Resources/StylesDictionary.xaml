<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:s="clr-namespace:MonitorWindows.Controls">
    <Style TargetType="Button" x:Key="DefaultBule3DBtn">
        <Setter Property="Height" Value="34" />
        <Setter Property="Width" Value="102" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="img/b_normal.png" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource DefaultBule3DBtn}" TargetType="Button" x:Key="Bule3DBtn">
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="img/b_hover.png" />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="img/b_hover.png" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="img/b_down.png" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource DefaultBule3DBtn}" TargetType="Button" x:Key="DefaultRed3DBtn">
        <Setter Property="Height" Value="27" />
        <Setter Property="Width" Value="67" />
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="img/r_normal.png" />
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource DefaultRed3DBtn}" TargetType="Button" x:Key="Red3DBtn">
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="img/r_hover.png" />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="img/r_hover.png" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="img/r_down.png" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="Login_Abnormal" TargetType="Label">
        <Setter Property="Height" Value="22" />
        <Setter Property="Width" Value="22" />
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="img/login_abnormal.png" />
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Login_Normal" TargetType="Label">
        <Setter Property="Height" Value="22" />
        <Setter Property="Width" Value="22" />
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="img/login_normal.png" />
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="UserInfo_Btn" TargetType="Label">
        <Setter Property="Width" Value="77" />
        <Setter Property="Height" Value="29" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="10,3,0,0" />
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="img/user_info_btn.png" />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="1" Color="#FFFFFF" Direction="1" ShadowDepth="0"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Button" x:Key="Close_Btn">
        <Setter Property="Width" Value="17" />
        <Setter Property="Height" Value="13" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="img/option/close.png" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="3" Color="#FFFFFF" Direction="3" ShadowDepth="0"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource Close_Btn}" TargetType="Button" x:Key="Maximize_Btn">
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="img/option/maximize.png" />
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource Close_Btn}" TargetType="Button" x:Key="Minimize_Btn">
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="img/option/minimize.png" />
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource Close_Btn}" TargetType="Button" x:Key="Narrow_Btn">
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="img/option/narrow.png" />
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="Button" x:Key="Top_Menu_Btn_NotBackground">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="img/menuBtn/hover.png" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="img/menuBtn/dowm.png" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="img/menuBtn/prohibition.png" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Image" x:Key="Top_Menu_ICO">
        <Setter Property="Margin" Value="0,5,0,5" />
        <Setter Property="Width" Value="35" />
    </Style>
    <Style TargetType="Label" x:Key="Top_Menu_Title">
        <Setter Property="Foreground" Value="White" />
    </Style>

    <Style x:Key="ExpanderStyle" TargetType="{x:Type Expander}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <StackPanel Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <CheckBox
                            Content="{TemplateBinding Header}"
                            IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                            <CheckBox.Style>
                                <Style TargetType="CheckBox">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="CheckBox">
                                                <Label
                                                    Content="{TemplateBinding Content}"
                                                    Name="txt"
                                                    FontSize="18"
                                                    Foreground="White"
                                                    Padding="10"
                                                    HorizontalContentAlignment="Center">
                                                    <Label.Background>
                                                        <ImageBrush ImageSource="img/tool/normal.png" />
                                                    </Label.Background>
                                                </Label>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" TargetName="txt">
                                                            <Setter.Value>
                                                                <ImageBrush ImageSource="img/tool/hover.png" />
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Background" TargetName="txt">
                                                            <Setter.Value>
                                                                <ImageBrush ImageSource="img/tool/dowm.png" />
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </CheckBox.Style>
                        </CheckBox>
                        <ContentPresenter
                            Name="ExpandSite"
                            Visibility="Collapsed"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"   
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />

                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Index_Top_Menu_Buttom" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="#808183" />
        <Setter Property="Padding" Value="20,5" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FFFFFF" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="#0591D0" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TabControlStyle" TargetType="{x:Type TabControl}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="White"/>
        <Setter Property="Background" Value="#F9F9F9"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <DockPanel ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <StackPanel x:Name="HeaderPanel" IsItemsHost="True" DockPanel.Dock="Bottom" />
                        <DockPanel x:Name="ContentPanel" Background="#CAD2D6">
                            <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </DockPanel>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="listTabItemStyle" TargetType="{x:Type TabItem}">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Label
                        x:Name="textBlock"
                        FontSize="18"
                        Height="45"
                        Content="{TemplateBinding Header}"
                        VerticalContentAlignment="Center"
                        HorizontalContentAlignment="Center"
                        Foreground="White">
                        <Label.Background>
                            <ImageBrush ImageSource="img/tool/normal.png" />
                        </Label.Background>
                    </Label>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="Selector.IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="textBlock">
                                <Setter.Value>
                                    <ImageBrush ImageSource="img/tool/hover.png" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" TargetName="textBlock">
                                <Setter.Value>
                                    <ImageBrush ImageSource="img/tool/dowm.png" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="textBlock">
                                <Setter.Value>
                                    <ImageBrush ImageSource="img/tool/prohibition.png" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Win_NotAction" TargetType="Label">
        <Setter Property="Background" Value="White" />
    </Style>
    <Style x:Key="Win_Action" TargetType="Label">
        <Setter Property="Background" Value="Red" />
    </Style>

    <!-- MoveThumb Template -->
    <ControlTemplate x:Key="MoveThumbTemplate" TargetType="{x:Type s:MoveThumb}">
        <Rectangle Fill="Transparent"/>
    </ControlTemplate>
    <!-- ResizeDecorator Template -->
    <ControlTemplate x:Key="ResizeDecoratorTemplate" TargetType="{x:Type Control}">
        <Grid>
            <Grid Opacity="0" Margin="-3">
                <s:ResizeThumb Height="3"
                             Cursor="SizeNS"
                             VerticalAlignment="Top"
                             HorizontalAlignment="Stretch"/>
                <s:ResizeThumb Width="3"
                             Cursor="SizeWE"
                             VerticalAlignment="Stretch"
                             HorizontalAlignment="Left"/>
                <s:ResizeThumb Width="3"
                             Cursor="SizeWE"
                             VerticalAlignment="Stretch"
                             HorizontalAlignment="Right"/>
                <s:ResizeThumb Height="3"
                             Cursor="SizeNS"
                             VerticalAlignment="Bottom"
                             HorizontalAlignment="Stretch"/>
                <s:ResizeThumb Width="7"
                             Height="7"
                             Margin="-2"
                             Cursor="SizeNWSE"
                             VerticalAlignment="Top"
                             HorizontalAlignment="Left"/>
                <s:ResizeThumb Width="7"
                             Height="7"
                             Margin="-2"
                             Cursor="SizeNESW"
                             VerticalAlignment="Top"
                             HorizontalAlignment="Right"/>
                <s:ResizeThumb Width="7"
                             Height="7"
                             Margin="-2"
                             Cursor="SizeNESW"
                             VerticalAlignment="Bottom"
                             HorizontalAlignment="Left"/>
                <s:ResizeThumb Width="7"
                             Height="7"
                             Margin="-2"
                             Cursor="SizeNWSE"
                             VerticalAlignment="Bottom"
                             HorizontalAlignment="Right"/>
            </Grid>
        </Grid>
    </ControlTemplate>
    <!-- Designer Item Template-->
    <ControlTemplate x:Key="DesignerItemTemplate" TargetType="UserControl">
        <Grid DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
            <s:MoveThumb Template="{StaticResource MoveThumbTemplate}" Cursor="SizeAll"/>
            <Control Template="{StaticResource ResizeDecoratorTemplate}"/>
            <ContentPresenter Content="{TemplateBinding ContentControl.Content}"/>
        </Grid>
    </ControlTemplate>
</ResourceDictionary>