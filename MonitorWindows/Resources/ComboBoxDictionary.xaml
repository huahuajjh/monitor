<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">
    <Style TargetType="ComboBox" x:Key="LabelComboBox">
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <!-- ToggleButton 已数据绑定到 ComboBox 本身以切换 IsDropDownOpen -->
                        <CheckBox
                            Grid.Column="2"
                            Background="{TemplateBinding Background}"
                            x:Name="ToggleButton"
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                            <DockPanel Width="{Binding ElementName=ToggleButton,Path=ActualWidth}">
                                <Label Foreground="{TemplateBinding Foreground}" Name="Check_state" DockPanel.Dock="Right" Content="&#xf078;" FontFamily="font/#FontAwesome" Margin="10,0" />
                                <Label Foreground="{TemplateBinding Foreground}" Content="{TemplateBinding SelectionBoxItem}" />
                            </DockPanel>
                            <CheckBox.Style>
                                <Style TargetType="CheckBox">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="CheckBox">
                                                <Label
                                                    Content="{TemplateBinding Content}"
                                                    Background="{TemplateBinding Background}"
                                                    Name="txt"
                                                    FontSize="{TemplateBinding FontSize}"
                                                    Foreground="{TemplateBinding Foreground}"
                                                    Padding="{TemplateBinding Padding}"
                                                    VerticalContentAlignment="Center" />

                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="True">
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </CheckBox.Style>
                        </CheckBox>

                        <!-- Popup 可显示 ComboBox 中的项列表。IsOpen 已数据绑定到通过 ComboBoxToggleButton 来切换的 IsDropDownOpen -->
                        <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
                            <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
                                <ScrollViewer Style="{DynamicResource SimpleScrollViewer}" SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True">
                                    <!-- StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True -->
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" Background="White"/>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter TargetName="Check_state" Property="Content" Value="&#xf077;" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ObjectDataProvider MethodName="GetType" ObjectType="{x:Type sys:Type}" x:Key="colorsTypeOdp">
        <ObjectDataProvider.MethodParameters>
            <sys:String>System.Windows.Media.Colors, PresentationCore,
            Version=3.0.0.0, Culture=neutral,
            PublicKeyToken=31bf3856ad364e35</sys:String>
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>
    <ObjectDataProvider ObjectInstance="{StaticResource colorsTypeOdp}" MethodName="GetProperties" x:Key="colorPropertiesOdp"></ObjectDataProvider>
    <Style x:Key="ColorComboBox" TargetType="ComboBox">
        <Setter Property="ItemsSource" Value="{Binding Source={StaticResource colorPropertiesOdp}}" />
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <Rectangle Fill="{Binding Name}" Margin="1 3" Height="10" Width="100"></Rectangle>
                        <TextBlock Text="{Binding Name}" Margin="2 0"></TextBlock>
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <!-- ToggleButton 已数据绑定到 ComboBox 本身以切换 IsDropDownOpen -->
                        <CheckBox
                            Grid.Column="2"
                            Background="{TemplateBinding Background}"
                            x:Name="ToggleButton"
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                            <DockPanel Width="{Binding ElementName=ToggleButton,Path=ActualWidth}">
                                <Label Foreground="{TemplateBinding Foreground}" Name="Check_state" DockPanel.Dock="Right" Content="&#xf078;" FontFamily="font/#FontAwesome" Margin="10,0" />
                                <StackPanel Orientation="Horizontal">
                                    <Rectangle VerticalAlignment="Center" Margin="5,0" Fill="{Binding RelativeSource={RelativeSource TemplatedParent},Path=SelectedValue.Name}" Height="10" Width="100"></Rectangle>
                                    <TextBlock VerticalAlignment="Center" Margin="5,0" Text="{Binding RelativeSource={RelativeSource TemplatedParent},Path=SelectedValue.Name}" Foreground="{TemplateBinding Foreground}"></TextBlock>
                                </StackPanel>
                            </DockPanel>
                            <CheckBox.Style>
                                <Style TargetType="CheckBox">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="CheckBox">
                                                <Label
                                                    Content="{TemplateBinding Content}"
                                                    Background="{TemplateBinding Background}"
                                                    Name="txt"
                                                    FontSize="{TemplateBinding FontSize}"
                                                    Foreground="{TemplateBinding Foreground}"
                                                    Padding="{TemplateBinding Padding}"
                                                    VerticalContentAlignment="Center" />

                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="True">
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </CheckBox.Style>
                        </CheckBox>
                        <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
                            <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
                                <ScrollViewer Style="{DynamicResource SimpleScrollViewer}" SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True">
                                    <!-- StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True -->
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" Background="White"/>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter TargetName="Check_state" Property="Content" Value="&#xf077;" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>