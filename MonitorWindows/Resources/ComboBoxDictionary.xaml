<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">
    <Style TargetType="ComboBox" x:Key="LabelComboBox">
        <Setter Property="BorderBrush" Value="#CCCCCC" />
        <Setter Property="Background" Value="White" />
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <!-- ToggleButton 已数据绑定到 ComboBox 本身以切换 IsDropDownOpen -->
                        <CheckBox
                            Grid.Column="2"
                            x:Name="ToggleButton"
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="2" ClipToBounds="True">
                                <DockPanel Width="{Binding ElementName=ToggleButton,Path=ActualWidth}">
                                    <Label Foreground="{TemplateBinding Foreground}" Name="Check_state" DockPanel.Dock="Right" Content="&#xf107;" FontFamily="font/#FontAwesome" Margin="10,0" VerticalAlignment="Center" />
                                    <Label Foreground="{TemplateBinding Foreground}" Content="{TemplateBinding SelectionBoxItem}" />
                                </DockPanel>
                            </Border>
                            <CheckBox.Style>
                                <Style TargetType="CheckBox">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="CheckBox">
                                                <Label
                                                    Content="{TemplateBinding Content}"
                                                    Name="txt"
                                                    FontSize="{TemplateBinding FontSize}"
                                                    Foreground="{TemplateBinding Foreground}"
                                                    Padding="{TemplateBinding Padding}"
                                                    VerticalContentAlignment="Center" />

                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="True">
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </CheckBox.Style>
                        </CheckBox>

                        <!-- Popup 可显示 ComboBox 中的项列表。IsOpen 已数据绑定到通过 ComboBoxToggleButton 来切换的 IsDropDownOpen -->
                        <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">                            
                            <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
                                <ScrollViewer Margin="2" Style="{DynamicResource SimpleScrollViewer}" SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True">
                                    <ScrollViewer.Effect>
                                        <DropShadowEffect ShadowDepth="0"/>
                                    </ScrollViewer.Effect>
                                    <!-- StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True -->
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" Background="White">
                                    </StackPanel>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter TargetName="Check_state" Property="Content" Value="&#xf106;" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="ComboBox" x:Key="ExtendPlatform">
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <!-- ToggleButton 已数据绑定到 ComboBox 本身以切换 IsDropDownOpen -->
                        <CheckBox
                            Grid.Column="2"
                            Background="{TemplateBinding Background}"
                            x:Name="ToggleButton"
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                            <Border Padding="0,5" Cursor="Hand" Name="SPTag">
                                <StackPanel>
                                    <Image Style="{StaticResource Top_Menu_ICO}" Source="img/menuICO/extendWin.png"  />
                                    <StackPanel Orientation="Horizontal">
                                        <Label Content="{DynamicResource IndexWin_TopMenuTitle_extendWin}" Style="{StaticResource Top_Menu_Title}" HorizontalAlignment="Center" />
                                        <Label Name="DornState" Content="&#xf078;" FontFamily="font/#FontAwesome" HorizontalAlignment="Right" Foreground="White" Padding="0" VerticalAlignment="Center"></Label>
                                    </StackPanel>
                                </StackPanel>
                            </Border>
                            <CheckBox.Style>
                                <Style TargetType="CheckBox">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="CheckBox">
                                                <ContentPresenter />
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="True">
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </CheckBox.Style>
                        </CheckBox>

                        <!-- Popup 可显示 ComboBox 中的项列表。IsOpen 已数据绑定到通过 ComboBoxToggleButton 来切换的 IsDropDownOpen -->
                        <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
                            <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
                                <ScrollViewer SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True">
                                    <!-- StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True -->
                                    <Border Padding="2,5" Margin="0,5">
                                        <Border.Background>
                                            <ImageBrush ImageSource="img/down_background.png" Stretch="Fill" />
                                        </Border.Background>
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </Border>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="SPTag">
                                <Setter.Value>
                                    <ImageBrush ImageSource="img/menuBtn/hover.png" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter Property="Background" TargetName="SPTag">
                                <Setter.Value>
                                    <ImageBrush ImageSource="img/menuBtn/dowm.png" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Content" Value="&#xf077;" TargetName="DornState" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="ComboBox" x:Key="SplitWin">
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <!-- ToggleButton 已数据绑定到 ComboBox 本身以切换 IsDropDownOpen -->
                        <CheckBox
                            Grid.Column="2"
                            Background="{TemplateBinding Background}"
                            x:Name="ToggleButton"
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                            <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" Name="SPTag">
                                <Label
                                    ToolTip="{DynamicResource IndexWin_TopWinMenuTitle_Split}"
                                    HorizontalContentAlignment="Center"
                                    VerticalContentAlignment="Center"
                                    Name="SPTagTxt"
                                    Foreground="#808183"
                                    Padding="15,5"
                                    Cursor="Hand"
                                    FontSize="12">
                                    <Image Source="img/tool_ico/fenPing.png" Height="18" />
                                </Label>
                            </Border>
                            <CheckBox.Style>
                                <Style TargetType="CheckBox">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="CheckBox">
                                                <ContentPresenter />
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="True">
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </CheckBox.Style>
                        </CheckBox>

                        <!-- Popup 可显示 ComboBox 中的项列表。IsOpen 已数据绑定到通过 ComboBoxToggleButton 来切换的 IsDropDownOpen -->
                        <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
                            <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
                                <ScrollViewer Style="{DynamicResource SimpleScrollViewer}" SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True">
                                    <!-- StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True -->
                                    <StackPanel Margin="2" IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" Background="White">
                                        <StackPanel.Effect>
                                            <DropShadowEffect ShadowDepth="0"/>
                                        </StackPanel.Effect>
                                    </StackPanel>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="SPTag" Value="#FFFFFF" />
                        </Trigger>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter Property="Foreground" TargetName="SPTagTxt" Value="#0591D0" />
                            <Setter Property="Background" TargetName="SPTag" Value="#FFFFFF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>